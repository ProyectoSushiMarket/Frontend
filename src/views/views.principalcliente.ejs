<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tienda Verduras (cliente)</title>
    <link rel="stylesheet" href="/css/principalcliente.css">

    <!-- Validaci칩n del token y obtenci칩n de usuario -->
    <script>
        const token = sessionStorage.getItem("token");
        if (!token) {
            window.location.href = "/";
        }

        // Obtener datos del usuario
        async function obtenerDatosUsuario() {
            const url = sessionStorage.getItem("urltiendaverduras") + "/login/datosusuario";
            try {
                const response = await fetch(url, {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json",
                        "x-access-token": token
                    }
                });
                if (!response.ok) throw new Error("No se pudo obtener la informaci칩n del usuario");

                const data = await response.json();
                if (data.error) {
                    window.location.href = "/";
                } else {
                    // Guardar datos en sessionStorage
                    sessionStorage.setItem("usuarioId", data.id_usuario);
                    sessionStorage.setItem("usuarioNombre", data.nombre);

                    // Mostrar nombre del usuario en el encabezado
                    document.getElementById("usuario-nombre-header").textContent = data.nombre;
                }
            } catch (error) {
                console.error("Error al obtener el usuario:", error);
                window.location.href = "/";
            }
        }

        const CerrarSesion = () => {
            sessionStorage.clear();
            window.location.href = "/";
        };

        // Cargar datos del usuario al cargar la p치gina
        document.addEventListener("DOMContentLoaded", obtenerDatosUsuario);
    </script>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo">Tienda Verduras</div>
            <ul>
                <li><a href="/principalcliente">Tienda</a></li>
                <li><a href="https://wa.me/+573188342212">Cont치ctanos</a></li>
                <li><a href="/pedidos">Pedidos</a></li>
            </ul>
            <div class="icons">
                <div class="usuario">Perfil 游녻: <span id="usuario-nombre-header">CLIENTE</span></div>
                <button class="CerrarSesion-button" onclick="CerrarSesion()">Cerrar Sesi칩n</button>
            </div>
        </nav>
    </header>

    <section class="search-bar">
        <input type="text" id="searchBar" placeholder="Buscar...">
    </section>

    <section class="products-grid">
        <script>
            async function cargarProductos() {
                const apiURL = "http://localhost:4100/producto";
                try {
                    const response = await fetch(apiURL);
                    if (!response.ok) throw new Error("Error al cargar los productos");

                    const productos = await response.json();

                    const productsGrid = document.querySelector(".products-grid");
                    productsGrid.innerHTML = "";

                    productos.forEach(producto => {
                        const productCard = document.createElement("div");
                        productCard.className = "product-card";

                        productCard.innerHTML = `
                            <div class="product-image">
                                <img src="${producto.imagen}" alt="${producto.nombre}">
                            </div>
                            <div class="product-info" style="text-align: center;">
                                <h3>${producto.nombre}</h3>
                                <button class="make-order-button" onclick="selectProducto('${producto.nombre}')">Hacer Pedido</button>
                            </div>
                        `;
                        productsGrid.appendChild(productCard);
                    });
                } catch (error) {
                    console.error("Error:", error);
                    alert("No se pudieron cargar los productos.");
                }
            }

            // Funci칩n que selecciona el producto y lo coloca en el modal
            function selectProducto(nombreProducto) {
                // Mostrar el nombre del producto directamente en el modal
                const productoElemento = document.getElementById("producto");
                productoElemento.textContent = nombreProducto; // Nombre del producto est치tico

                // Mostrar el modal
                const modal = document.getElementById("order-modal");
                modal.style.display = "flex";

                // Establecer datos del usuario en el formulario
                const usuarioNombre = sessionStorage.getItem("usuarioNombre");
                const usuarioId = sessionStorage.getItem("usuarioId");
                document.getElementById("nombre-usuario").value = usuarioNombre;
                document.getElementById("usuario").value = usuarioId;

                // Guardar el nombre del producto en el campo oculto
                document.getElementById("producto-nombre").value = nombreProducto;

                // Establecer la fecha actual como texto
                const fechaActual = new Date().toLocaleString(); // Establecemos la fecha como string legible
                document.getElementById("fecha-pedido").textContent = fechaActual;
            }

            function cerrarModal() {
                const modal = document.getElementById("order-modal");
                modal.style.display = "none";
            }

            cargarProductos();
        </script>
    </section>

    <div id="order-modal" class="modal">
        <div class="modal-content-container">
            <span class="close" onclick="cerrarModal()">&times;</span>
            <h2>Realizar Pedido</h2>
            <form id="pedido-form" onsubmit="realizarPedido(event)">
                <div class="modal-info">

                    <label for="usuario-nombre">Usuario:</label>
                    <input type="text" id="nombre-usuario" name="nombre-usuario" disabled>
                    <input type="hidden" id="usuario" name="usuario">

                    <label for="producto">Producto:</label>
                    <p id="producto"></p>
                    <input type="hidden" id="producto-nombre" name="producto-nombre">

                    <label for="fecha_pedido">Fecha del Pedido:</label>
                    <p id="fecha-pedido"></p>

                    <label for="cantidad">Cantidad:</label>
                    <input type="number" id="cantidad" name="cantidad" placeholder="Ingresa la cantidad que necesitas" required>

                    <label for="unidad_de_medida">Unidad de medida:</label>
                    <select id="unidad-de-medida" name="unidad_de_medida" required>
                        <option value="" disabled selected>Selecciona la unidad de medida</option>
                        <option value="KL">KL</option>
                        <option value="UND">UND</option>
                    </select>

                    <label for="caracteristicas">Caracter칤sticas:</label>
                    <select name="caracteristicas" id="caracteristicas">
                        <option value="" disabled selected>Selecciona las caracter칤sticas</option>
                        <option value="Pinton">Pinton</option>
                        <option value="Maduro">Maduro</option>
                    </select>

                    <button type="submit">Confirmar Pedido</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        async function realizarPedido(event) {
            event.preventDefault();

            const productoNombre = document.getElementById('producto-nombre').value;
            if (!productoNombre) {
                alert("Por favor, selecciona un producto.");
                return;
            }

            // Obtener la fecha ya est치tica y convertirla en el formato adecuado
            const fechaPedido = document.getElementById('fecha-pedido').textContent; // Fecha est치tica
            const fechaFormateada = new Date(fechaPedido).toISOString().slice(0, 19).replace('T', ' ');  // Formato 'YYYY-MM-DD HH:MM:SS'

            // Crear el objeto con los datos del pedido
            const pedidoData = {
                id_usuario: sessionStorage.getItem("usuarioId"),
                nombre_producto: productoNombre,
                fecha_pedido: fechaFormateada,  // La fecha ya est치 formateada correctamente
                cantidad: document.getElementById('cantidad').value,
                unidad_de_medida: document.getElementById('unidad-de-medida').value,
                caracteristicas: document.getElementById('caracteristicas').value
            };

            try {
                const response = await fetch('http://localhost:4100/pedido', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(pedidoData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    alert(errorData.error || 'Error al realizar el pedido');
                    return;
                }

                const data = await response.json();
                alert('Pedido realizado correctamente');
                cerrarModal();
            } catch (error) {
                console.error('Hubo un error al realizar el pedido:', error);
                alert('Error al realizar el pedido');
            }
        }
    </script>
    <script src="/js/principalcliente.js"></script>
</body>
</html>
